<?php

class Solution
{
    /**
    * @param Integer[] $arr
    * @param Integer $k
    * @return Integer[]
    */
    public function smallestK($arr, $k)
    {
        return $this->sort($arr, 0, count($arr) - 1, $k);
    }

    public function sort(&$arr, $l, $r, $k)
    {
        // 1. 递归终止条件
        if ($l >= $r) {
            return [];
        }
        // 2. 随机化，避免因有序数组出现性能退化的问题
        //在区间[l, r]中取一个数k，交换arr[l]和arr[k]
        $m = mt_rand($l, $r);
        $this->swamp($arr, $l, $m);
        $i = $l + 1;
        $j = $r;
        while (true) {
            while ($i <= $j && $arr[$i] < $arr[$l]) {
                $i ++;
            }
            while ($j >= $i && $arr[$j] > $arr[$l]) {
                $j --;
            }
            if ($i >= $j) {
                break;
            }
            $this->swamp($arr, $i, $j);
            $i ++;
            $j --;
        }
        $this->swamp($arr, $l, $j);
        if ($k - 1 == $j) {
            return array_slice($arr, 0, $k);
        } elseif ($k - 1 < $j) {
            return $this->sort($arr, $l, $j, $k);
        } else {
            return $this->sort($arr, $j, $r, $k);
        }
    }

    public function swamp(&$arr, $i, $j)
    {
        $temp = $arr[$i];
        $arr[$i] = $arr[$j];
        $arr[$j] = $temp;
    }
}

$arr = [-30,5,8405,7,5355,8,-38,-17781,14,-3434,8,235,-53,679,-14313,46063,-8,29290,7,-690,-38134,-6645,1,51,9,33073,-61786,1844,-5549,-1,-54,3602,8732,8,95,9,-3,-162,-943,67,3,13,-9009,282,-2520,470,-54586,54428,-45,128,-64,-788,2808,53,5139,4,677,6919,-173,3686,10068,-36,-16009,-9349,-32416,-5615,-27,65144,-6738,94,7,3535,75,-4165,-812,-62,-85,44050,-394,-36,4,0,-3216,7380,6,-4,2,90,26,-1282,-34109,977,-430,-5,21,7,-59,-17188,38592,4547,-10187,-2040,-997,-9,36,67,-47147,8,-21034,0,38,12055,-56117,-7,267,20,-98,1,-19,469,32,-2223,44956,8,-106,4145,-827,-43021,-84,-599,-52343,0,-4,-7099,15876,-47128,37367,-61350,-6509,15,7,-6716,-5,-2,-15810,677,200,-25968,-72,2,-6,667,249,14,-546,30,9632,-40,-88,31244,-655,34,132,-13,-5,64,-79,-18,443,29998,41491,7832,0,0,-308,0,305,83,644,82,-264,-1378,0,-686,521,-1,945,6,39098,-18833,411,8782,19788,7746,-24,44344,30162,-3,-742,-3,67,-79,-1,0,42106,-7,17,40447,-53,-20295,-363,-3821,11906,-23,-1,4,-97,7,632,8116,49418,-8741,-8620,7285,6468,-2,1488,-9310,0,9682,-5958,8,-6212,7414,56404,61,-320,53,-86,4,-16396,-3573,-460,359,48708,50597,-20242,3,-76,17551,-63,60251,5,873,57,-12753,51,-71,-699,30,-26346,58,1,8,-42642,-7,-382,2951,-746,4225,20070,311,-882,-38,263,-3,91,-5,56,-8663,440,15643,12,-36,754,6,22915,-30,50,-455,-150,97,-3546,-4399,-343,7535,-6763,-156,-8794,-161,-21,67,-266,1111,-49204,-4,27015,1763,-99,-60,-598,717,-7621,24786,8322,1923,55,0,16,-143,-34,14254,146,0,51,-98,60689,-9,52374,-20,2213,631,5772,50,-29078,82,4,40,-6203,41587,-176,587,-5,3,6,-16,34244,-4,40,-1914,1493,-740,599,-6215,-2,346,-88,-9869,-60148,-921,88,4525,2,-1,64181,55,63,2779,-6978,-84,86,6348,61084,550,-54954,42,-35,22926,-6647,-63928,34,-2,57059,-5406,8,5,-97,-519,51481,7682,-3,-6273,-562,-26,-820,-60387,38497,876,154,33472,-59906,-3849,-994,2,-33528,9848,5,-4644,-530,8,2829,8,-14,309,0,818,-57,6395,29910,4647,47936,-29170,-796,-8,32,-5947,4799,-3809,37,820,3,869,-61,1,-69,344,4835,-26467,5610,63011,2,-10616,45965,-5,63000,51,96,42317,36,31929,-8490,24,0,1824,-929,344,294,-385,137,-32,4436,-7496,-803,-1136,0,-7123,48,-15887,6,-1094,-79,948,55550,97,-55995,-90,-136,-117,6,2,-6,19,-63,164,22,-28141,-534,6823,7,748,-49280,-55,817,-430,-2468,67,-51,1081,-229,4,-429,-3392,-41,34152,-574,-2,1314,8137,-97,-541,7962,3988,-22,325,-6823,78,42,1,-38639,5,6,-286,55,-271,0,-646,4,4681,-2212,-8403,51974,-5525,64484,-36164,-1,-459,8978,28,0,-6631,191,60281,828,-9,-37286,-46403,-77,-24927,-80,79,5616,0,971,-40230,-29395,-6414,2309,50,155,6275,64,448,-37,-5927,-8989,-117,-8453,-24286,3786,-63026,33197,-24,7,743,-8,99,232,-340,-75,12396,-881,-2905,5584,-5,-649,-64,-82,-8,-581,-52,-274,356,-30,1,26]; 
$k = 391;

// $arr = [1,3,5,7,2,4,6,8];
// $k = 4;
$so = new Solution();
$re = $so->smallestK($arr, $k);
var_dump($re);
